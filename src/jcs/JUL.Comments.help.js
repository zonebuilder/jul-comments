/*
	JUL Comment System (JCS) version 1.5
	Copyright (c) 2015 - 2018 The Zonebuilder <zone.builder@gmx.com>
	http://sourceforge.net/projects/jul-comments/
	Licenses: GNU GPLv2 or later; GNU LGPLv3 or later (http://sourceforge.net/p/jul-comments/wiki/License/)
*/
/**
	@fileOverview	This file contains the configuration for the 'Help' window
*/
/* jshint browser: true, curly: true, eqeqeq: true, expr: true, funcscope: true, immed: true, latedef: true, loopfunc: true,  
	onevar: true, newcap: true, noarg: true, node: true, strict: true, trailing: true, undef: true, unused: vars, wsh: true */
/* globals ample, JUL */

(function() {
'use strict';
var jul = JUL;

/* generated by JCS version 1.3.8 */

/**
	Help window module
	@namespace
	@name	JUL.Comments.help
*/
jul.ns('JUL.Comments.help');

/**
	UI configuration for the Help window
	@type	Object
	@name	JUL.Comments.help.ui
*/
jul.ns('JUL.Comments.help.ui', {
	tag: 'window',
	id: 'window-help',
	hidden: true,
	title: JUL.Comments.title + ' Help',
	width: 980,
	height: 480,
	children: [
		{tag: 'toolbox', children: [
			{tag: 'toolbar', children: [
				{tag: 'toolbargrippy'},
				{tag: 'toolbarbutton', type: 'checkbox', checked: true, label: 'Show contents',
					 listeners: {
					command: function() {
						ample.getElementById('tree-help').setAttribute('hidden', this.getAttribute('checked') !== 'true');
					}
				}},
				{tag: 'toolbarseparator'},
				{tag: 'vbox', flex: 1},
				{xclass: 'html', tag: 'div', width: 220, style: 'padding:5px 18px 0 0;text-align:right', children: [
					{xclass: 'html', tag: 'a', target: '_blank', href: 'docs/index.html?1502963185236', html: 'Open in a new window'}
				]}
			]}
		]},
		{tag: 'hbox', flex: 1, children: [
			{tag: 'tree', id: 'tree-help', seltype: 'single', width: 280, height: '100%', children: [
				{tag: 'treecols', children: [
					{tag: 'treecol', primary: true, width: 310, label: 'Contents'}
				]},
				{tag: 'treebody'}
			],
			listeners: {
				select: function(oEvent) {
					var oNodeList = this.selectedItems;
					if (!oNodeList.length) { return; }
					var oHelp = ample.getElementById('iframe-help');
					oHelp.setAttribute('src', JUL.Comments.help.src + '#' + oNodeList.item(oNodeList.length - 1).getAttribute('id').substr(10));
				}
			}},
			{tag: 'vbox', flex: 1, children: [
				{tag: 'iframe', id: 'iframe-help', flex: 1, src: 'docs/index.html?1502963185236'}
			]}
		]}
	]
});

jul.apply(jul.get('JUL.Comments.help'), /** @lends JUL.Comments.help */ {
	/**
		Help page URL
		@type	String
	*/
	src: 'docs/index.html?' + (new Date()).getTime(),
	/**
		Fires after the help page is loaded
	*/
	onLoad: function() {
		var oHelp = document.getElementById('iframe-help');
		oHelp = oHelp.contentDocument || oHelp.contentWindow.document;
		var oToc = oHelp.getElementById('toc');
		if (!oToc || !oToc.firstChild) { return; }
		var oStyle = oHelp.styleSheets[oHelp.styleSheets.length - 1];
		if (oStyle.insertRule) { oStyle.insertRule('.to-top{display:none;}', 0); }
		else if (oStyle.addRule) { oStyle.addRule('.to-top', 'display:none', 0); }
		oToc.style.cssText = oToc.style.cssText + ';display:none';
		var fParse = function(oNode, oTree) {
			if (!oNode.firstChild) { return; }
			var oItem, i, oChild;
			if (oNode.nodeType === 1 && oNode.nodeName.toLowerCase() === 'li') {
				oItem = JUL.Comments.help.parser.create({tag: 'treeitem', id: 'node-help-' + oNode.firstChild.hash.substr(1), container: true, open: true, children: [
					{tag: 'treerow', children: [
						{tag: 'treecell', label: oNode.firstChild.text || oNode.firstChild.innerText}
					]}
				]}, null, oTree);
				for (i = 1; i < oNode.childNodes.length; i++) {
					oChild = oNode.childNodes[i];
					if (oChild.nodeType === 1 && oChild.nodeName.toLowerCase() === 'ul') {
						fParse(oChild, oItem);
						break;
					}
				}
			}
			if (oNode.nodeType === 1 && oNode.nodeName.toLowerCase() === 'ul') {
				oItem = JUL.Comments.help.parser.create({tag: 'treechildren'}, null, oTree);
				for (i = 0; i < oNode.childNodes.length; i++) {
					oChild = oNode.childNodes[i];
					if (oChild.nodeType === 1 && oChild.nodeName.toLowerCase() === 'li') {
	 						fParse(oChild, oItem);
					}
				}
			}
		};
		var oBody = ample.getElementById('tree-help').querySelector('xul|treebody');
		for (var j = 0; j < oToc.childNodes.length; j++) {
			if (oToc.childNodes[j].nodeType === 1 && oToc.childNodes[j].nodeName.toLowerCase() === 'ul') {
				fParse(oToc.childNodes[j], oBody);
				break;
			}
			ample.getElementById('tree-help').reflow();
		}
	}
});

})();

/* end JUL.Comments.help.js */
